#!/usr/bin/env python
# TODO: generalize

import os, os.path
import re

from process.logging import Logger as log

from process.globals import load_config
load_config("worldpay-audit")

from process.globals import config
import process.lock as lock
import sftp.client

remote_root = "/"

def walk_files(paths):
    result = []

    if not hasattr(paths, 'extend'):
        paths = [paths]

    for root in paths:
        for dirpath, dirnames, filenames in os.walk(root):
            result += filenames

    return result

if __name__ == '__main__':
    log.info("Begin WorldPay nightly audit download")
    lock.begin()

    local_paths = [
        config.incoming_path,
        config.archive_path,
    ]
    local_files = walk_files(local_paths)

    remote = sftp.client.Client(host_dss_key=config.sftp.host_key)
    remote_files = remote.ls(remote_root)

    for filename in remote_files:
        if filename in local_files:
            log.info("Skipping already downloaded file {filename}".format(filename=filename))
            continue

        log.info("Downloading file {filename}".format(filename=filename))
        dest_path = os.path.join(config.incoming_path, filename)
        remote.get(os.path.join(remote_root, filename), dest_path)

		# Assert that the file is not empty
        if os.path.getsize(dest_path) == 0:
            os.unlink(dest_path)
            log.warn("Stupid file was empty, removing locally: {path}".format(path=dest_path))
            #raise RuntimeError("Stupid file did not download correctly.")

    lock.end()
    log.info("End WorldPay nightly audit download")
